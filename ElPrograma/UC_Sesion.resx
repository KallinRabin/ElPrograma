<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /ws92FRNe7vikAAAAABJRU5ErkJggg==
</value>
  </data>
</root>