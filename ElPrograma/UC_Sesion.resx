<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>